# Generated by Django 3.0.3 on 2020-02-26 02:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                ("username", models.CharField(max_length=200)),
                ("nickname", models.CharField(blank=True, max_length=100)),
                ("phone", models.CharField(blank=True, max_length=100)),
                ("statement", models.CharField(blank=True, max_length=200)),
                ("motd_dirty", models.BooleanField(default=True)),
                ("seen_welcome", models.BooleanField(default=False)),
                ("images", models.TextField(blank=True, max_length=500)),
                ("cal_feed_dirty", models.BooleanField(default=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Active"), (1, "Dormant"), (2, "Deleted")],
                        default=0,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "member",
                "verbose_name_plural": "members",
                "permissions": (("beta_tester", "Is A Beta Tester"),),
            },
        ),
        migrations.CreateModel(
            name="MemberPreferences",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hide_canceled_gigs", models.BooleanField(default=False)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("de", "German"),
                            ("en-us", "English (US)"),
                            ("en-uk", "English (UK)"),
                            ("fr", "French"),
                            ("it", "Italian"),
                        ],
                        default="en",
                        max_length=200,
                    ),
                ),
                ("share_profile", models.BooleanField(default=True)),
                ("share_email", models.BooleanField(default=False)),
                ("calendar_show_only_confirmed", models.BooleanField(default=True)),
                ("calendar_show_only_committed", models.BooleanField(default=True)),
                ("agenda_show_time", models.BooleanField(default=False)),
                ("show_long_agenda", models.BooleanField(default=True)),
                (
                    "default_view",
                    models.IntegerField(
                        choices=[(0, "Agenda"), (1, "Grid"), (2, "Calendar")], default=0
                    ),
                ),
                (
                    "member",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
